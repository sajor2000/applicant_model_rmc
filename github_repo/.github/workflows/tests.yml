name: Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.9, '3.10', 3.11]

    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip packages
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov
    
    - name: Run tests with coverage
      run: |
        # Run basic tests from root
        pytest tests/ --cov-report=xml --cov-report=html
        # Run github_repo tests if they exist
        if [ -d "github_repo/tests" ]; then
          cd github_repo && pytest tests/ --cov=src --cov-report=xml --cov-report=html
        fi
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
    
    - name: Lint with flake8
      run: |
        pip install flake8
        # Lint main source files
        if [ -d "src" ]; then flake8 src --count --select=E9,F63,F7,F82 --show-source --statistics; fi
        if [ -d "github_repo/src" ]; then flake8 github_repo/src --count --select=E9,F63,F7,F82 --show-source --statistics; fi
        # Lint tests with relaxed rules
        if [ -d "tests" ]; then flake8 tests --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics; fi
    
    - name: Type check with mypy
      run: |
        pip install mypy
        # Type check available source directories
        if [ -d "src" ]; then mypy src --ignore-missing-imports --ignore-errors; fi
        if [ -d "github_repo/src" ]; then mypy github_repo/src --ignore-missing-imports --ignore-errors; fi